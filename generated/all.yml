---
# Source: icinga-stack/charts/icinga-kubernetes/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: icinga2-stack-icinga-kubernetes
  namespace: "default"
  labels:
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icinga-kubernetes
    app.kubernetes.io/version: 0.2.0
    helm.sh/chart: icinga-kubernetes-0.3.1
---
# Source: icinga-stack/charts/icinga-kubernetes/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: icinga2-stack-icinga-kubernetes-configuration
  namespace: "default"
  labels:
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icinga-kubernetes
    app.kubernetes.io/version: 0.2.0
    helm.sh/chart: icinga-kubernetes-0.3.1
data:
  config.yml: |-
    # This is the configuration file for Icinga Kubernetes.
    
    # Connection configuration for the database to which Icinga Kubernetes synchronizes data.
    # This is also the database used in Icinga Kubernetes Web to view and work with the data.
    database:
        # Database type. Only 'mysql' is supported yet which is the default.
        #  type: mysql
    
        # Database host or absolute Unix socket path.
        host:  icinga2-stack-kubernetes-database 
    
        # Database port. By default, the MySQL port.
        port: 3306
    
        # Database name.
        database: kubernetes
    
        # Database user.
        user: kubernetes
    
        # Database password.
        password: password
---
# Source: icinga-stack/charts/icinga2/templates/configmaps.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: icinga2-stack-config
  labels:
    helm.sh/chart: icinga2-0.4.0
    app.kubernetes.io/name: icinga2
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "2.13.10"
    app.kubernetes.io/managed-by: Helm
data:
  icinga2.conf: |-
    // Constants for Icinga 2 from constants.conf
    const PluginDir = "/usr/lib/nagios/plugins"
    const ManubulonPluginDir = "/usr/lib/nagios/plugins"
    const PluginContribDir = "/usr/lib/nagios/plugins"
    const NodeName = "icinga2-master"
    const ZoneName = "master"
    const TicketSalt = getenv("ICINGA_TICKET_SALT")
    
    // Standard imports from icinga2.conf
    include <itl>
    include <plugins>
    include <plugins-contrib>
    include <manubulon>
    include <windows-plugins>
    include <nscp>
    include "features-enabled/*.conf"
    include "api-users.conf"
    
    // zones.conf
    object Endpoint NodeName {
        host = "icinga2-stack"
        port = 5665
    }
    
    object Zone ZoneName {
        endpoints = [ NodeName ]
    }
    
    object Zone "global-templates" {
        global = true
    }
    
    object Zone "director-global" {
        global = true
    }
  api-users.conf: | # skip key credSecret
    object ApiUser "director" {
      password = getenv("ICINGA_DIRECTOR_API_PASSWORD")
      permissions = ["*"]
    } # skip key credSecret
    object ApiUser "icingaweb" {
      password = getenv("ICINGA_ICINGAWEB_API_PASSWORD")
      permissions = ["*"]
    }
---
# Source: icinga-stack/charts/icinga2/templates/configmaps.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: icinga2-stack-features
  labels:
    helm.sh/chart: icinga2-0.4.0
    app.kubernetes.io/name: icinga2
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "2.13.10"
    app.kubernetes.io/managed-by: Helm
data:
  api.conf: |
    object ApiListener "api" {
      accept_commands = false
      accept_config = false
      ticket_salt = TicketSalt
      cipher_list = "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:AES256-GCM-SHA384:AES128-GCM-SHA256"
      connect_timeout = 15s
    }
  checker.conf: |
    object CheckerComponent "checker" {}
  icingadb.conf: |
    object IcingaDB "icingadb" {
        host = "icinga2-stack-redis"
        port = 6379
        enable_tls = false
        insecure_noverify = false
        cipher_list = "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:AES256-GCM-SHA384:AES128-GCM-SHA256"
        tls_protocolmin = "TLSv1.2"
        connect_timeout = 15s
    }
  notification.conf: |
    object NotificationComponent "notification" {
      enable_ha = false
    }
  syslog.conf: |
    object SyslogLogger "syslog" {
      severity = "warning"
      facility = FacilityUser
    }
---
# Source: icinga-stack/charts/icinga-kubernetes/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: icinga2-stack-icinga-kubernetes
  labels:
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icinga-kubernetes
    app.kubernetes.io/version: 0.2.0
    helm.sh/chart: icinga-kubernetes-0.3.1
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - watch
      - list
---
# Source: icinga-stack/charts/icinga-kubernetes/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: icinga2-stack-icinga-kubernetes
  labels:
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icinga-kubernetes
    app.kubernetes.io/version: 0.2.0
    helm.sh/chart: icinga-kubernetes-0.3.1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: icinga2-stack-icinga-kubernetes
subjects:
  - kind: ServiceAccount
    name: icinga2-stack-icinga-kubernetes
    namespace: "default"
---
# Source: icinga-stack/charts/icinga2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: icinga2-stack
  labels:
    helm.sh/chart: icinga2-0.4.0
    app.kubernetes.io/name: icinga2
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "2.13.10"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 5665
      targetPort: api
      protocol: TCP
      name: api
  selector:
    app.kubernetes.io/name: icinga2
    app.kubernetes.io/instance: icinga2-stack
---
# Source: icinga-stack/charts/icingaweb2/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: icinga2-stack-icingaweb2
  labels:
    helm.sh/chart: icingaweb2-0.3.0
    app.kubernetes.io/name: icingaweb2
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "2.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: icingaweb2
    app.kubernetes.io/instance: icinga2-stack
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: v1
kind: Service
metadata:
  name: icinga2-stack-director-database  # hardcoded so that dependant services can find it
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-director-database
spec:
  ports:
    - port: 3306
      name: mariadb
  selector:
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/component: icinga2-stack-icinga-stack-director-database
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: v1
kind: Service
metadata:
  name: icinga2-stack-icingadb-database  # hardcoded so that dependant services can find it
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-icingadb-database
spec:
  ports:
    - port: 3306
      name: mariadb
  selector:
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/component: icinga2-stack-icinga-stack-icingadb-database
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: v1
kind: Service
metadata:
  name: icinga2-stack-icingaweb2-database  # hardcoded so that dependant services can find it
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-icingaweb2-database
spec:
  ports:
    - port: 3306
      name: mariadb
  selector:
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/component: icinga2-stack-icinga-stack-icingaweb2-database
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: v1
kind: Service
metadata:
  name: icinga2-stack-kubernetes-database  # hardcoded so that dependant services can find it
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-kubernetes-database
spec:
  ports:
    - port: 3306
      name: mariadb
  selector:
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/component: icinga2-stack-icinga-stack-kubernetes-database
---
# Source: icinga-stack/templates/redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: icinga2-stack-redis
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-redis
spec:
  ports:
    - port: 6379
      name: redis
  selector:
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/component: icinga2-stack-icinga-stack-redis
---
# Source: icinga-stack/charts/icinga-kubernetes/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icinga2-stack-icinga-kubernetes
  namespace: "default"
  labels:
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: icinga-kubernetes
    app.kubernetes.io/version: 0.2.0
    helm.sh/chart: icinga-kubernetes-0.3.1
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: icinga2-stack
      app.kubernetes.io/name: icinga-kubernetes
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: icinga2-stack
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: icinga-kubernetes
        app.kubernetes.io/version: 0.2.0
        helm.sh/chart: icinga-kubernetes-0.3.1
      annotations:
    spec:
      serviceAccountName: icinga2-stack-icinga-kubernetes
      containers:
        - name: icinga-kubernetes
          image: "icinga/icinga-kubernetes:0.2.0"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: configuration
              mountPath: /config.yml
              subPath: config.yml
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: configuration
          configMap:
            name: icinga2-stack-icinga-kubernetes-configuration
---
# Source: icinga-stack/charts/icingadb/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icinga2-stack-icingadb
  labels:
    helm.sh/chart: icingadb-0.3.0
    app.kubernetes.io/name: icingadb
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "1.1.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: icingadb
      app.kubernetes.io/instance: icinga2-stack
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icingadb
        app.kubernetes.io/instance: icinga2-stack
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: icingadb
          image: "icinga/icingadb:1.1.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: ICINGADB_REDIS_HOST
              value:  icinga2-stack-redis 
            - name: ICINGADB_REDIS_PORT
              value:  "6379" 
            - name: ICINGADB_DATABASE_HOST
              value:  icinga2-stack-icingadb-database 
            - name: ICINGADB_DATABASE_PORT
              value: "3306"
            - name: ICINGADB_DATABASE_USER
              value: "icingadb"
            - name: ICINGADB_DATABASE_PASSWORD
              value: "password"
            - name: ICINGADB_DATABASE_DATABASE
              value: "icingadb"
          resources:
            {}
---
# Source: icinga-stack/charts/icingaweb2/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: icinga2-stack-icingaweb2
  labels:
    helm.sh/chart: icingaweb2-0.3.0
    app.kubernetes.io/name: icingaweb2
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "2.12.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: icingaweb2
      app.kubernetes.io/instance: icinga2-stack
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icingaweb2
        app.kubernetes.io/instance: icinga2-stack
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: icingaweb2
          image: "icinga/icingaweb2:2.12.1"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: icingaweb.enabledModules
              value: director,icingadb,incubator,kubernetes,            
            - name: icingaweb.modules.director.config.db.resource
              value: "directordb"
            - name: icingaweb.modules.director.kickstart.config.endpoint
              value: icinga2-master
            - name: icingaweb.modules.director.kickstart.config.host
              value: icinga2-stack-icinga2
            - name: icingaweb.modules.director.kickstart.config.username
              value: director
            - name: icingaweb.modules.director.kickstart.config.password
              value: "password"
            - name: icingaweb.authentication.icingaweb2.backend
              value: "db"
            - name: icingaweb.authentication.icingaweb2.resource
              value: "icingaweb2db"
            - name: "icingaweb.passwords.icingaweb2.icingaadmin"
              value: "password"
            - name: icingaweb.config.global.config_resource
              value: "icingaweb2db"
            - name: icingaweb.groups.icingaweb2.backend
              value: "db"
            - name: icingaweb.groups.icingaweb2.resource
              value: "icingaweb2db"
            - name: icingaweb.roles.Administrators.users
              value: "icingaadmin"
            - name: icingaweb.roles.Administrators.permissions
              value: '*'
            - name: icingaweb.roles.Administrators.groups
              value: Administrators
            - name: icingaweb.modules.icingadb.config.icingadb.resource
              value: "icingadb"
            - name: icingaweb.modules.icingadb.redis.redis1.host
              value: "icinga2-stack-redis"
            - name: icingaweb.modules.icingadb.redis.redis1.port
              value: "6379"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.transport
              value: api
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.skip_validation
              value: "0"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.host
              value: "icinga2-stack-icinga2"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.port
              value: "5665"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.username
              value: "icingaweb"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.password
              value: "password"
            - name: icingaweb.modules.kubernetes.config.database.resource
              value: "kubernetes" # TODO: Job for x509 migrations            
            - name: icingaweb.resources.directordb.type
              value: db
            - name: icingaweb.resources.directordb.db
              value: mysql
            - name: icingaweb.resources.directordb.host
              value:  icinga2-stack-director-database 
            - name: icingaweb.resources.directordb.dbname
              value: directordb
            - name: icingaweb.resources.directordb.username
              value: "director"
            - name: icingaweb.resources.directordb.password
              value: "password"
            - name: icingaweb.resources.directordb.charset
              value: utf8
            - name: icingaweb.resources.icingadb.type
              value: db
            - name: icingaweb.resources.icingadb.db
              value: mysql
            - name: icingaweb.resources.icingadb.host
              value:  icinga2-stack-icingadb-database 
            - name: icingaweb.resources.icingadb.dbname
              value: icingadb
            - name: icingaweb.resources.icingadb.username
              value: "icingadb"
            - name: icingaweb.resources.icingadb.password
              value: "password"
            - name: icingaweb.resources.icingaweb2db.type
              value: db
            - name: icingaweb.resources.icingaweb2db.db
              value: mysql
            - name: icingaweb.resources.icingaweb2db.host
              value:  icinga2-stack-icingaweb2-database 
            - name: icingaweb.resources.icingaweb2db.dbname
              value: icingaweb2db
            - name: icingaweb.resources.icingaweb2db.username
              value: "icingaweb2"
            - name: icingaweb.resources.icingaweb2db.password
              value: "password"
            - name: icingaweb.resources.kubernetes.type
              value: db
            - name: icingaweb.resources.kubernetes.db
              value: mysql
            - name: icingaweb.resources.kubernetes.host
              value:  icinga2-stack-kubernetes-database 
            - name: icingaweb.resources.kubernetes.dbname
              value: kubernetes
            - name: icingaweb.resources.kubernetes.username
              value: "kubernetes"
            - name: icingaweb.resources.kubernetes.password
              value: "password"
            - name: icingaweb.resources.x509db.type
              value: db
            - name: icingaweb.resources.x509db.db
              value: mysql
            - name: icingaweb.resources.x509db.host
              value:   
            - name: icingaweb.resources.x509db.dbname
              value: x509db
            - name: icingaweb.resources.x509db.username
              value: "mysql"
            - name: icingaweb.resources.x509db.password
              value: "mysql"
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            {}      
        - name: icingaweb2-director
          image: "icinga/icingaweb2:2.12.1"
          imagePullPolicy: Always
          command: []
          args:
            - /bin/bash
            - -ce
            - |
              icingacli director migration run
              (icingacli director kickstart required && icingacli director kickstart run && icingacli director config deploy) || true
              icingacli director daemon run
          env:
            - name: icingaweb.enabledModules
              value: director,icingadb,incubator,kubernetes,            
            - name: icingaweb.modules.director.config.db.resource
              value: "directordb"
            - name: icingaweb.modules.director.kickstart.config.endpoint
              value: icinga2-master
            - name: icingaweb.modules.director.kickstart.config.host
              value: icinga2-stack-icinga2
            - name: icingaweb.modules.director.kickstart.config.username
              value: director
            - name: icingaweb.modules.director.kickstart.config.password
              value: "password"
            - name: icingaweb.authentication.icingaweb2.backend
              value: "db"
            - name: icingaweb.authentication.icingaweb2.resource
              value: "icingaweb2db"
            - name: "icingaweb.passwords.icingaweb2.icingaadmin"
              value: "password"
            - name: icingaweb.config.global.config_resource
              value: "icingaweb2db"
            - name: icingaweb.groups.icingaweb2.backend
              value: "db"
            - name: icingaweb.groups.icingaweb2.resource
              value: "icingaweb2db"
            - name: icingaweb.roles.Administrators.users
              value: "icingaadmin"
            - name: icingaweb.roles.Administrators.permissions
              value: '*'
            - name: icingaweb.roles.Administrators.groups
              value: Administrators
            - name: icingaweb.modules.icingadb.config.icingadb.resource
              value: "icingadb"
            - name: icingaweb.modules.icingadb.redis.redis1.host
              value: "icinga2-stack-redis"
            - name: icingaweb.modules.icingadb.redis.redis1.port
              value: "6379"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.transport
              value: api
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.skip_validation
              value: "0"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.host
              value: "icinga2-stack-icinga2"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.port
              value: "5665"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.username
              value: "icingaweb"
            - name: icingaweb.modules.icingadb.commandtransports.icinga2.password
              value: "password"
            - name: icingaweb.modules.kubernetes.config.database.resource
              value: "kubernetes"            
            - name: icingaweb.resources.directordb.type
              value: db
            - name: icingaweb.resources.directordb.db
              value: mysql
            - name: icingaweb.resources.directordb.host
              value:  icinga2-stack-director-database 
            - name: icingaweb.resources.directordb.dbname
              value: directordb
            - name: icingaweb.resources.directordb.username
              value: "director"
            - name: icingaweb.resources.directordb.password
              value: "password"
            - name: icingaweb.resources.directordb.charset
              value: utf8
            - name: icingaweb.resources.icingadb.type
              value: db
            - name: icingaweb.resources.icingadb.db
              value: mysql
            - name: icingaweb.resources.icingadb.host
              value:  icinga2-stack-icingadb-database 
            - name: icingaweb.resources.icingadb.dbname
              value: icingadb
            - name: icingaweb.resources.icingadb.username
              value: "icingadb"
            - name: icingaweb.resources.icingadb.password
              value: "password"
            - name: icingaweb.resources.icingaweb2db.type
              value: db
            - name: icingaweb.resources.icingaweb2db.db
              value: mysql
            - name: icingaweb.resources.icingaweb2db.host
              value:  icinga2-stack-icingaweb2-database 
            - name: icingaweb.resources.icingaweb2db.dbname
              value: icingaweb2db
            - name: icingaweb.resources.icingaweb2db.username
              value: "icingaweb2"
            - name: icingaweb.resources.icingaweb2db.password
              value: "password"
            - name: icingaweb.resources.kubernetes.type
              value: db
            - name: icingaweb.resources.kubernetes.db
              value: mysql
            - name: icingaweb.resources.kubernetes.host
              value:  icinga2-stack-kubernetes-database 
            - name: icingaweb.resources.kubernetes.dbname
              value: kubernetes
            - name: icingaweb.resources.kubernetes.username
              value: "kubernetes"
            - name: icingaweb.resources.kubernetes.password
              value: "password"
            - name: icingaweb.resources.x509db.type
              value: db
            - name: icingaweb.resources.x509db.db
              value: mysql
            - name: icingaweb.resources.x509db.host
              value:   
            - name: icingaweb.resources.x509db.dbname
              value: x509db
            - name: icingaweb.resources.x509db.username
              value: "mysql"
            - name: icingaweb.resources.x509db.password
              value: "mysql"
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            {}
      volumes:
        - name: data
          emptyDir: {}
---
# Source: icinga-stack/charts/icinga2/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: icinga2-stack
  labels:
    helm.sh/chart: icinga2-0.4.0
    app.kubernetes.io/name: icinga2
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "2.13.10"
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: icinga2-stack
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: icinga2
      app.kubernetes.io/instance: icinga2-stack
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icinga2
        app.kubernetes.io/instance: icinga2-stack
    spec:
      serviceAccountName: default
      securityContext:
        fsGroup: 5665
      containers:
        - name: icinga2
          image: "icinga/icinga2:2.13.10"
          imagePullPolicy: IfNotPresent
          env:
            - name: ICINGA_DISABLE_CONFD
              value: "1"
            - name: ICINGA_TICKET_SALT
              value: "U79IF=4n:h@Mjt0gRs(5#i@9Tmf_Mw+UxPDd-G2Q=Aps2C@z9n" # skip credSecret key
            - name: ICINGA_DIRECTOR_API_PASSWORD
              value: "password" # skip credSecret key
            - name: ICINGA_ICINGAWEB_API_PASSWORD
              value: "password"
          ports:
            - name: api
              containerPort: 5665
              protocol: TCP
          command:
            - icinga2
            - daemon
          volumeMounts:
            - name: data
              mountPath: /data
            - name: icinga2-stack-features
              mountPath: /etc/icinga2/features-enabled
            - name: icinga2-stack-config
              mountPath: /etc/icinga2            
          resources:
            {}
      initContainers:
        - name: icinga2-bootstrapper
          image: "icinga/icinga2:2.13.10"
          imagePullPolicy: IfNotPresent
          args:
            - icinga2
            - daemon
            - -C
          env:
            - name: ICINGA_CN
              value: "icinga2-master"
            - name: ICINGA_MASTER
              value: "1"
            - name: ICINGA_DISABLE_CONFD
              value: "1"
            - name: ICINGA_TICKET_SALT
              value: "U79IF=4n:h@Mjt0gRs(5#i@9Tmf_Mw+UxPDd-G2Q=Aps2C@z9n" # skip credSecret key
            - name: ICINGA_DIRECTOR_API_PASSWORD
              value: "password" # skip credSecret key
            - name: ICINGA_ICINGAWEB_API_PASSWORD
              value: "password"
          volumeMounts:
            - name: data
              mountPath: /data            
          resources:
            {}
      volumes:
        - name: icinga2-stack-features
          configMap:
            name: icinga2-stack-features
        - name: icinga2-stack-config
          configMap:
            name: icinga2-stack-config
        - name: data
          emptyDir: {}
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: icinga2-stack-icinga-stack-director-database
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-director-database
spec:
  serviceName: icinga2-stack-icinga-stack-director-database
  selector:
    matchLabels:
      app.kubernetes.io/name: icinga-stack
      app.kubernetes.io/instance: icinga2-stack
      app.kubernetes.io/component: icinga2-stack-icinga-stack-director-database
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icinga-stack
        app.kubernetes.io/instance: icinga2-stack
        app.kubernetes.io/component: icinga2-stack-icinga-stack-director-database
    spec:
      containers:
        - name: mariadb
          image: mariadb:latest
          ports:
            - containerPort: 3306
              name: mariadb
          env:
            - name: MARIADB_RANDOM_ROOT_PASSWORD
              value: "1"
            - name: MARIADB_DATABASE
              value: "directordb"
            - name: MARIADB_USER
              value: "director"
            - name: MARIADB_PASSWORD
              value: "password"
          volumeMounts:
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: icinga2-stack-icinga-stack-icingadb-database
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-icingadb-database
spec:
  serviceName: icinga2-stack-icinga-stack-icingadb-database
  selector:
    matchLabels:
      app.kubernetes.io/name: icinga-stack
      app.kubernetes.io/instance: icinga2-stack
      app.kubernetes.io/component: icinga2-stack-icinga-stack-icingadb-database
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icinga-stack
        app.kubernetes.io/instance: icinga2-stack
        app.kubernetes.io/component: icinga2-stack-icinga-stack-icingadb-database
    spec:
      containers:
        - name: mariadb
          image: mariadb:latest
          ports:
            - containerPort: 3306
              name: mariadb
          env:
            - name: MARIADB_RANDOM_ROOT_PASSWORD
              value: "1"
            - name: MARIADB_DATABASE
              value: "icingadb"
            - name: MARIADB_USER
              value: "icingadb"
            - name: MARIADB_PASSWORD
              value: "password"
          volumeMounts:
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: icinga2-stack-icinga-stack-icingaweb2-database
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-icingaweb2-database
spec:
  serviceName: icinga2-stack-icinga-stack-icingaweb2-database
  selector:
    matchLabels:
      app.kubernetes.io/name: icinga-stack
      app.kubernetes.io/instance: icinga2-stack
      app.kubernetes.io/component: icinga2-stack-icinga-stack-icingaweb2-database
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icinga-stack
        app.kubernetes.io/instance: icinga2-stack
        app.kubernetes.io/component: icinga2-stack-icinga-stack-icingaweb2-database
    spec:
      containers:
        - name: mariadb
          image: mariadb:latest
          ports:
            - containerPort: 3306
              name: mariadb
          env:
            - name: MARIADB_RANDOM_ROOT_PASSWORD
              value: "1"
            - name: MARIADB_DATABASE
              value: "icingaweb2db"
            - name: MARIADB_USER
              value: "icingaweb2"
            - name: MARIADB_PASSWORD
              value: "password"
          volumeMounts:
---
# Source: icinga-stack/templates/internal-databases.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: icinga2-stack-icinga-stack-kubernetes-database
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-kubernetes-database
spec:
  serviceName: icinga2-stack-icinga-stack-kubernetes-database
  selector:
    matchLabels:
      app.kubernetes.io/name: icinga-stack
      app.kubernetes.io/instance: icinga2-stack
      app.kubernetes.io/component: icinga2-stack-icinga-stack-kubernetes-database
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icinga-stack
        app.kubernetes.io/instance: icinga2-stack
        app.kubernetes.io/component: icinga2-stack-icinga-stack-kubernetes-database
    spec:
      containers:
        - name: mariadb
          image: mariadb:latest
          ports:
            - containerPort: 3306
              name: mariadb
          env:
            - name: MARIADB_RANDOM_ROOT_PASSWORD
              value: "1"
            - name: MARIADB_DATABASE
              value: "kubernetes"
            - name: MARIADB_USER
              value: "kubernetes"
            - name: MARIADB_PASSWORD
              value: "password"
          volumeMounts:
---
# Source: icinga-stack/templates/redis.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: icinga2-stack-icinga-stack-redis
  labels:
    helm.sh/chart: icinga-stack-0.5.1
    app.kubernetes.io/name: icinga-stack
    app.kubernetes.io/instance: icinga2-stack
    app.kubernetes.io/version: "0.5.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: icinga2-stack-icinga-stack-redis
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: icinga-stack
      app.kubernetes.io/instance: icinga2-stack
      app.kubernetes.io/component: icinga2-stack-icinga-stack-redis
  serviceName: icinga2-stack-redis
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: icinga-stack
        app.kubernetes.io/instance: icinga2-stack
        app.kubernetes.io/component: icinga2-stack-icinga-stack-redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379
              name: redis
